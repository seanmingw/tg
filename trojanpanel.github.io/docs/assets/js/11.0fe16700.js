(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{287:function(a,t,e){"use strict";e.r(t);var s=e(7),r=Object(s.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"手动安装教程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#手动安装教程"}},[a._v("#")]),a._v(" 手动安装教程")]),a._v(" "),t("h2",{attrs:{id:"准备"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#准备"}},[a._v("#")]),a._v(" 准备")]),a._v(" "),t("h4",{attrs:{id:"安装顺序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装顺序"}},[a._v("#")]),a._v(" 安装顺序")]),a._v(" "),t("p",[a._v("Docker -> Caddy2 -> MariaDB -> Redis -> Trojan Panel Backend -> Trojan Panel Frontend -> Trojan Panel Core")]),a._v(" "),t("h4",{attrs:{id:"版本对应关系"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#版本对应关系"}},[a._v("#")]),a._v(" 版本对应关系")]),a._v(" "),t("table",[t("thead",[t("tr",[t("th",[a._v("名称")]),a._v(" "),t("th",[a._v("版本")])])]),a._v(" "),t("tbody",[t("tr",[t("td",[a._v("Docker")]),a._v(" "),t("td",[a._v("latest")])]),a._v(" "),t("tr",[t("td",[a._v("Nginx")]),a._v(" "),t("td",[a._v("1.20-alpine")])]),a._v(" "),t("tr",[t("td",[a._v("Caddy2")]),a._v(" "),t("td",[a._v("2.6.2")])]),a._v(" "),t("tr",[t("td",[a._v("MariaDB")]),a._v(" "),t("td",[a._v("10.7.3")])]),a._v(" "),t("tr",[t("td",[a._v("Redis")]),a._v(" "),t("td",[a._v("6.2.7")])]),a._v(" "),t("tr",[t("td",[a._v("Trojan Panel Frontend")]),a._v(" "),t("td",[a._v("latest")])]),a._v(" "),t("tr",[t("td",[a._v("Trojan Panel Backend")]),a._v(" "),t("td",[a._v("latest")])]),a._v(" "),t("tr",[t("td",[a._v("Trojan Panel Core")]),a._v(" "),t("td",[a._v("latest")])])])]),a._v(" "),t("h2",{attrs:{id:"安装docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装docker"}},[a._v("#")]),a._v(" 安装Docker")]),a._v(" "),t("blockquote",[t("p",[a._v("Docker官方安装教程：https://docs.docker.com/engine/install/")])]),a._v(" "),t("h2",{attrs:{id:"安装caddy2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装caddy2"}},[a._v("#")]),a._v(" 安装Caddy2")]),a._v(" "),t("blockquote",[t("p",[a._v("Docker Hub：https://hub.docker.com/_/caddy")])]),a._v(" "),t("ol",[t("li",[t("p",[a._v("Pull the image")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" pull caddy:2.6.2\n")])])])]),a._v(" "),t("li",[t("p",[a._v("Start a container")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" trojan-panel-caddy "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--restart")]),a._v(" always "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--network")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("host "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CADDY_CONFIG}")]),a._v('"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CADDY_CONFIG}")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CERT_PATH}")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/tpdata/cert/certificates/acme-v02.api.letsencrypt.org-directory/'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${domain}")]),a._v('/"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${WEB_PATH}")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${WEB_PATH}")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CADDY_LOG}")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CADDY_LOG}")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\ncaddy:2.6.2 caddy run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--config")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CADDY_CONFIG}")]),a._v("\n")])])])])]),a._v(" "),t("p",[a._v("参数解释：")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("--name trojan-panel-redis")]),a._v("：定义容器的名称")]),a._v(" "),t("li",[t("code",[a._v("--restart always")]),a._v("：容器随着Docker启动而启动")]),a._v(" "),t("li",[t("code",[a._v("--network=host")]),a._v("：使用Host网络模式")]),a._v(" "),t("li",[t("code",[a._v('-v "${CADDY_CONFIG}":"${CADDY_CONFIG}"')]),a._v("：映射Caddy配置文件")]),a._v(" "),t("li",[t("code",[a._v('-v ${CERT_PATH}:"/tpdata/cert/certificates/acme-v02.api.letsencrypt.org-directory/${domain}/"')]),a._v("：映射证书文件夹")]),a._v(" "),t("li",[t("code",[a._v("-v ${WEB_PATH}:${WEB_PATH}")]),a._v("：映射伪装网站文件夹")]),a._v(" "),t("li",[t("code",[a._v("-v ${CADDY_LOG}:${CADDY_LOG}")]),a._v("：日志文件夹")]),a._v(" "),t("li",[t("code",[a._v("caddy run --config ${CADDY_CONFIG}")]),a._v("：指定配置文件运行")])]),a._v(" "),t("p",[a._v("Caddy配置举例")]),a._v(" "),t("ol",[t("li",[a._v("acme自动申请和续签")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('{\n    "admin":{\n        "disabled":true\n    },\n    "logging":{\n        "logs":{\n            "default":{\n                "writer":{\n                    "output":"file",\n                    "filename":"${CADDY_LOG}error.log"\n                },\n                "level":"ERROR"\n            }\n        }\n    },\n    "storage":{\n        "module":"file_system",\n        "root":"${CERT_PATH}"\n    },\n    "apps":{\n        "http":{\n            "http_port": ${caddy_port},\n            "servers":{\n                "srv0":{\n                    "listen":[\n                        ":${caddy_port}"\n                    ],\n                    "routes":[\n                        {\n                            "match":[\n                                {\n                                    "host":[\n                                        "${domain}"\n                                    ]\n                                }\n                            ],\n                            "handle":[\n                                {\n                                    "handler":"static_response",\n                                    "headers":{\n                                        "Location":[\n                                            "https://{http.request.host}:${caddy_remote_port}{http.request.uri}"\n                                        ]\n                                    },\n                                    "status_code":301\n                                }\n                            ]\n                        }\n                    ]\n                },\n                "srv1":{\n                    "listen":[\n                        ":${caddy_remote_port}"\n                    ],\n                    "routes":[\n                        {\n                            "handle":[\n                                {\n                                    "handler":"subroute",\n                                    "routes":[\n                                        {\n                                            "match":[\n                                                {\n                                                    "host":[\n                                                        "${domain}"\n                                                    ]\n                                                }\n                                            ],\n                                            "handle":[\n                                                {\n                                                    "handler":"file_server",\n                                                    "root":"${WEB_PATH}",\n                                                    "index_names":[\n                                                        "index.html",\n                                                        "index.htm"\n                                                    ]\n                                                }\n                                            ],\n                                            "terminal":true\n                                        }\n                                    ]\n                                }\n                            ]\n                        }\n                    ],\n                    "tls_connection_policies":[\n                        {\n                            "match":{\n                                "sni":[\n                                    "${domain}"\n                                ]\n                            }\n                        }\n                    ],\n                    "automatic_https":{\n                        "disable":true\n                    }\n                }\n            }\n        },\n        "tls":{\n            "certificates":{\n                "automate":[\n                    "${domain}"\n                ]\n            },\n            "automation":{\n                "policies":[\n                    {\n                        "issuers":[\n                            {\n                                "module":"acme",\n                                "email":""\n                            }\n                        ]\n                    }\n                ]\n            }\n        }\n    }\n}\n')])])]),t("p",[a._v("参数解释：")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("${CADDY_LOG}")]),a._v("：日志文件夹")]),a._v(" "),t("li",[t("code",[a._v("${CERT_PATH}")]),a._v("：证书文件夹")]),a._v(" "),t("li",[t("code",[a._v("${caddy_port}")]),a._v("：Caddy端口")]),a._v(" "),t("li",[t("code",[a._v("${domain}")]),a._v("：你的域名")]),a._v(" "),t("li",[t("code",[a._v("${caddy_remote_port}")]),a._v("：Caddy转发的端口")]),a._v(" "),t("li",[t("code",[a._v("${WEB_PATH}")]),a._v("：伪装网站文件夹")])]),a._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[a._v("手动设置自定义证书")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('{\n    "admin":{\n        "disabled":true\n    },\n    "logging":{\n        "logs":{\n            "default":{\n                "writer":{\n                    "output":"file",\n                    "filename":"${CADDY_LOG}error.log"\n                },\n                "level":"ERROR"\n            }\n        }\n    },\n    "storage":{\n        "module":"file_system",\n        "root":"${CERT_PATH}"\n    },\n    "apps":{\n        "http":{\n            "http_port": ${caddy_port},\n            "servers":{\n                "srv0":{\n                    "listen":[\n                        ":${caddy_port}"\n                    ],\n                    "routes":[\n                        {\n                            "match":[\n                                {\n                                    "host":[\n                                        "${domain}"\n                                    ]\n                                }\n                            ],\n                            "handle":[\n                                {\n                                    "handler":"static_response",\n                                    "headers":{\n                                        "Location":[\n                                            "https://{http.request.host}:${caddy_remote_port}{http.request.uri}"\n                                        ]\n                                    },\n                                    "status_code":301\n                                }\n                            ]\n                        }\n                    ]\n                },\n                "srv1":{\n                    "listen":[\n                        ":${caddy_remote_port}"\n                    ],\n                    "routes":[\n                        {\n                            "handle":[\n                                {\n                                    "handler":"subroute",\n                                    "routes":[\n                                        {\n                                            "match":[\n                                                {\n                                                    "host":[\n                                                        "${domain}"\n                                                    ]\n                                                }\n                                            ],\n                                            "handle":[\n                                                {\n                                                    "handler":"file_server",\n                                                    "root":"${WEB_PATH}",\n                                                    "index_names":[\n                                                        "index.html",\n                                                        "index.htm"\n                                                    ]\n                                                }\n                                            ],\n                                            "terminal":true\n                                        }\n                                    ]\n                                }\n                            ]\n                        }\n                    ],\n                    "tls_connection_policies":[\n                        {\n                            "match":{\n                                "sni":[\n                                    "${domain}"\n                                ]\n                            }\n                        }\n                    ],\n                    "automatic_https":{\n                        "disable":true\n                    }\n                }\n            }\n        },\n        "tls":{\n            "certificates":{\n                "automate":[\n                    "${domain}"\n                ],\n                "load_files":[\n                    {\n                        "certificate":"/tpdata/cert/certificates/acme-v02.api.letsencrypt.org-directory/${domain}/${domain}.crt",\n                        "key":"/tpdata/cert/certificates/acme-v02.api.letsencrypt.org-directory/${domain}/${domain}.key"\n                    }\n                ]\n            },\n            "automation":{\n                "policies":[\n                    {\n                        "issuers":[\n                            {\n                                "module":"acme",\n                                "email":""\n                            }\n                        ]\n                    }\n                ]\n            }\n        }\n    }\n}\n')])])]),t("p",[a._v("注意：需要将证书文件上传至证书文件夹："),t("code",[a._v("/tpdata/cert/")]),a._v("，证书文件名称格式为"),t("code",[a._v("${domian}.crt")]),a._v("和"),t("code",[a._v("${domian}.key")]),a._v("。")]),a._v(" "),t("p",[a._v("参数解释：")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("${CADDY_LOG}")]),a._v("：日志文件夹")]),a._v(" "),t("li",[t("code",[a._v("${CERT_PATH}")]),a._v("：证书文件夹")]),a._v(" "),t("li",[t("code",[a._v("${caddy_port}")]),a._v("：Caddy端口")]),a._v(" "),t("li",[t("code",[a._v("${domain}")]),a._v("：你的域名")]),a._v(" "),t("li",[t("code",[a._v("${caddy_remote_port}")]),a._v("：Caddy转发的端口")]),a._v(" "),t("li",[t("code",[a._v("${WEB_PATH}")]),a._v("：伪装网站文件夹")])]),a._v(" "),t("h2",{attrs:{id:"安装mariadb"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装mariadb"}},[a._v("#")]),a._v(" 安装MariaDB")]),a._v(" "),t("blockquote",[t("p",[a._v("Docker Hub：https://hub.docker.com/_/mariadb")])]),a._v(" "),t("ol",[t("li",[t("p",[a._v("Pull the image")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" pull mariadb:10.7.3\n")])])])]),a._v(" "),t("li",[t("p",[a._v("Start a container")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" trojan-panel-mariadb "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--restart")]),a._v(" always "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--network")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("host "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("MYSQL_DATABASE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"trojan_panel_db"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("MYSQL_ROOT_PASSWORD")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${mariadb_pas}")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("TZ")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("Asia/Shanghai "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\nmariadb:10.7.3 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--port")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${mariadb_port}")]),a._v("\n")])])])])]),a._v(" "),t("p",[a._v("参数解释：")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("--name trojan-panel-mariadb")]),a._v("：定义容器的名称")]),a._v(" "),t("li",[t("code",[a._v("--restart always")]),a._v("：容器随着Docker启动而启动")]),a._v(" "),t("li",[t("code",[a._v("--network=host")]),a._v("：使用Host网络模式")]),a._v(" "),t("li",[t("code",[a._v('-e MYSQL_DATABASE="trojan_panel_db"')]),a._v("：容器启动时创建一个默认的"),t("code",[a._v("trojan_panel_db")]),a._v("库")]),a._v(" "),t("li",[t("code",[a._v('-e MYSQL_ROOT_PASSWORD="${mariadb_pas}"')]),a._v("：设置MariaDB密码为"),t("code",[a._v("${mariadb_pas}")])]),a._v(" "),t("li",[t("code",[a._v("-e TZ=Asia/Shanghai")]),a._v("：设置时区为上海")]),a._v(" "),t("li",[t("code",[a._v("--port ${mariadb_port}")]),a._v("：自定义数据库端口（默认:9507）")])]),a._v(" "),t("h2",{attrs:{id:"安装redis"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装redis"}},[a._v("#")]),a._v(" 安装Redis")]),a._v(" "),t("blockquote",[t("p",[a._v("Docker Hub：https://hub.docker.com/_/redis")])]),a._v(" "),t("ol",[t("li",[t("p",[a._v("Pull the image")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" pull redis:6.2.7\n")])])])]),a._v(" "),t("li",[t("p",[a._v("Start a container")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" trojan-panel-redis "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--restart")]),a._v(" always "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--network")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("host "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\nredis:6.2.7 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\nredis-server "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--requirepass")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${redis_pass}")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--port")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${redis_port}")]),a._v("\n")])])])])]),a._v(" "),t("p",[a._v("参数解释：")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("--name trojan-panel-redis")]),a._v("：定义容器的名称")]),a._v(" "),t("li",[t("code",[a._v("--restart always")]),a._v("：容器随着Docker启动而启动")]),a._v(" "),t("li",[t("code",[a._v("--network=host")]),a._v("：使用Host网络模式")]),a._v(" "),t("li",[t("code",[a._v('redis-server --requirepass "${redis_pass}" --port ${redis_port}')]),a._v("：设置Redis密码为"),t("code",[a._v("${redis_pass}")]),a._v("\n设置Redis端口为"),t("code",[a._v("${redis_port}")]),a._v("（默认:6378）")])]),a._v(" "),t("h2",{attrs:{id:"安装trojan-panel-backend"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装trojan-panel-backend"}},[a._v("#")]),a._v(" 安装Trojan Panel Backend")]),a._v(" "),t("blockquote",[t("p",[a._v("Docker Hub：https://hub.docker.com/r/jonssonyan/trojan-panel")])]),a._v(" "),t("ol",[t("li",[t("p",[a._v("Pull the image")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" pull jonssonyan/trojan-panel\n")])])])]),a._v(" "),t("li",[t("p",[a._v("Start a container")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" trojan-panel "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--restart")]),a._v(" always "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--network")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("host "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${WEB_PATH}")]),a._v(":/tpdata/trojan-panel/webfile/ "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${TROJAN_PANEL_LOGS}")]),a._v(":/tpdata/trojan-panel/logs/ "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${TROJAN_PANEL_EXPORT}")]),a._v(":/tpdata/trojan-panel/export/ "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${TROJAN_PANEL_TEMPLATE}")]),a._v(":/tpdata/trojan-panel/template/ "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /etc/localtime:/etc/localtime "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("GIN_MODE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("release "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"mariadb_ip='),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${mariadb_ip}")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"mariadb_port='),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${mariadb_port}")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"mariadb_user='),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${mariadb_user}")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"mariadb_pas='),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${mariadb_pas}")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"redis_host='),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${redis_host}")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"redis_port='),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${redis_port}")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"redis_pass='),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${redis_pass}")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\njonssonyan/trojan-panel\n")])])])])]),a._v(" "),t("p",[a._v("参数解释：")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("--name trojan-panel")]),a._v("：定义容器的名称")]),a._v(" "),t("li",[t("code",[a._v("--restart always")]),a._v("：容器随着Docker启动而启动")]),a._v(" "),t("li",[t("code",[a._v("--network=host")]),a._v("：使用Host网络模式")]),a._v(" "),t("li",[t("code",[a._v("-v ${WEB_PATH}:/tpdata/trojan-panel/webfile/")]),a._v("：映射伪装网站文件夹")]),a._v(" "),t("li",[t("code",[a._v("-v ${TROJAN_PANEL_LOGS}:/tpdata/trojan-panel/logs/")]),a._v("：映射日志文件夹")]),a._v(" "),t("li",[t("code",[a._v("-v ${TROJAN_PANEL_EXPORT}:/tpdata/trojan-panel/export/")]),a._v("：映射导出文件文件夹")]),a._v(" "),t("li",[t("code",[a._v("-v ${TROJAN_PANEL_TEMPLATE}:/tpdata/trojan-panel/template/")]),a._v("：映射模板文件夹")]),a._v(" "),t("li",[t("code",[a._v("-v /etc/localtime:/etc/localtime")]),a._v("：同步宿主机和容器的时区")]),a._v(" "),t("li",[t("code",[a._v("-e GIN_MODE=release")]),a._v("：release模式启动")]),a._v(" "),t("li",[t("code",[a._v('-e "mariadb_ip=${mariadb_ip}"')]),a._v("："),t("code",[a._v("${mariadb_ip}")]),a._v("为 MariaDB 数据库的 IP 地址(默认:本机数据库)")]),a._v(" "),t("li",[t("code",[a._v('-e "mariadb_port=${mariadb_port}"')]),a._v("："),t("code",[a._v("${mariadb_port}")]),a._v("为 MariaDB 数据库的端口(默认:本机数据库端口)")]),a._v(" "),t("li",[t("code",[a._v('-e "mariadb_user=${mariadb_user}"')]),a._v("："),t("code",[a._v("${mariadb_user}")]),a._v("为 MariaDB 数据库的用户名(默认:root)")]),a._v(" "),t("li",[t("code",[a._v('-e "mariadb_pas=${mariadb_pas}"')]),a._v("："),t("code",[a._v("${mariadb_pas}")]),a._v("为 MariaDB 数据库密码(必填)")]),a._v(" "),t("li",[t("code",[a._v('-e "redis_host=${redis_host}"')]),a._v("："),t("code",[a._v("${redis_host}")]),a._v("为 Redis 的 IP 地址(默认:本机 Redis)")]),a._v(" "),t("li",[t("code",[a._v('-e "redis_port=${redis_port}"')]),a._v("："),t("code",[a._v("${redis_port}")]),a._v("为 Redis 的端口(默认:本机 Redis 端口)")]),a._v(" "),t("li",[t("code",[a._v('-e "redis_pass=${redis_pass}"')]),a._v("："),t("code",[a._v("${redis_pass}")]),a._v("为 Redis 的密码(必填)")])]),a._v(" "),t("h2",{attrs:{id:"安装trojan-panel-frontend"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装trojan-panel-frontend"}},[a._v("#")]),a._v(" 安装Trojan Panel Frontend")]),a._v(" "),t("blockquote",[t("p",[a._v("Docker Hub：https://hub.docker.com/r/jonssonyan/trojan-panel-ui")])]),a._v(" "),t("ol",[t("li",[t("p",[a._v("Pull the image")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" pull jonssonyan/trojan-panel-ui\n")])])])]),a._v(" "),t("li",[t("p",[a._v("Start a container")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" trojan-panel-ui "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--restart")]),a._v(" always "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--network")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("host "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${UI_NGINX_CONFIG}")]),a._v('"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/etc/nginx/conf.d/default.conf"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CERT_PATH}")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CERT_PATH}")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\njonssonyan/trojan-panel-ui\n")])])])])]),a._v(" "),t("p",[a._v("参数解释：")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("--name trojan-panel-ui")]),a._v("：定义容器名称")]),a._v(" "),t("li",[t("code",[a._v("--restart always")]),a._v("：容器随着Docker启动而启动")]),a._v(" "),t("li",[t("code",[a._v("--network=host")]),a._v("：使用Host网络模式")]),a._v(" "),t("li",[t("code",[a._v('-v "${NGINX_CONFIG}":"/etc/nginx/conf.d/default.conf"')]),a._v("：映射Nginx配置文件")]),a._v(" "),t("li",[t("code",[a._v("-v ${CERT_PATH}:${CERT_PATH}")]),a._v("：映射证书文件夹")])]),a._v(" "),t("p",[a._v("Nginx配置举例")]),a._v(" "),t("ol",[t("li",[a._v("使用 https")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("server {\n    listen       ${trojan_panel_ui_port} ssl;\n    server_name  localhost;\n    #强制ssl\n    ssl on;\n    ssl_certificate      ${CERT_PATH}${domain}.crt;\n    ssl_certificate_key  ${CERT_PATH}${domain}.key;\n    #缓存有效期\n    ssl_session_timeout  5m;\n    #安全链接可选的加密协议\n    ssl_protocols  TLSv1.3;\n    #加密算法\n    ssl_ciphers  ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;\n    #使用服务器端的首选算法\n    ssl_prefer_server_ciphers  on;\n    #access_log  /var/log/nginx/host.access.log  main;\n    location / {\n        root   ${TROJAN_PANEL_UI_DATA};\n        index  index.html index.htm;\n    }\n    location /api {\n        proxy_pass http://127.0.0.1:8081;\n    }\n    #error_page  404              /404.html;\n    #497 http->https\n    error_page  497               https://\\$host:${trojan_panel_ui_port}\\$request_uri;\n    # redirect server error pages to the static page /50x.html\n    #\n    error_page   500 502 503 504  /50x.html;\n    location = /50x.html {\n        root   /usr/share/nginx/html;\n    }\n}\n")])])]),t("p",[a._v("参数解释：")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("${trojan_panel_ui_port}")]),a._v("：Trojan Panel 端口")]),a._v(" "),t("li",[t("code",[a._v("${CERT_PATH}")]),a._v("：证书文件夹")]),a._v(" "),t("li",[t("code",[a._v("${domain}")]),a._v("：你的域名")]),a._v(" "),t("li",[t("code",[a._v("${TROJAN_PANEL_UI_DATA}")]),a._v("：前端编译文件所在的文件夹")])]),a._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[a._v("使用 http")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("server {\n    listen       ${trojan_panel_ui_port};\n    server_name  localhost;\n    location / {\n        root   ${TROJAN_PANEL_UI_DATA};\n        index  index.html index.htm;\n    }\n    location /api {\n        proxy_pass http://127.0.0.1:8081;\n    }\n    error_page  497               http://\\$host:${trojan_panel_ui_port}\\$request_uri;\n    error_page   500 502 503 504  /50x.html;\n    location = /50x.html {\n        root   /usr/share/nginx/html;\n    }\n}\n")])])]),t("p",[a._v("参数解释：")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("${trojan_panel_ui_port}")]),a._v("：Trojan Panel 前端端口")]),a._v(" "),t("li",[t("code",[a._v("${TROJAN_PANEL_UI_DATA}")]),a._v("：前端编译文件所在的文件夹")])]),a._v(" "),t("h2",{attrs:{id:"安装trojan-panel-core"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装trojan-panel-core"}},[a._v("#")]),a._v(" 安装Trojan Panel Core")]),a._v(" "),t("blockquote",[t("p",[a._v("Docker Hub：https://hub.docker.com/r/jonssonyan/trojan-panel-core")])]),a._v(" "),t("ol",[t("li",[t("p",[a._v("Pull the image")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" pull jonssonyan/trojan-panel-core\n")])])])]),a._v(" "),t("li",[t("p",[a._v("Start a container")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" trojan-panel-core "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--restart")]),a._v(" always "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--network")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("host "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${TROJAN_PANEL_CORE_DATA}")]),a._v("bin/xray/config:"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${TROJAN_PANEL_CORE_DATA}")]),a._v("bin/xray/config "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${TROJAN_PANEL_CORE_DATA}")]),a._v("bin/trojango/config:"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${TROJAN_PANEL_CORE_DATA}")]),a._v("bin/trojango/config "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${TROJAN_PANEL_CORE_DATA}")]),a._v("bin/hysteria/config:"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${TROJAN_PANEL_CORE_DATA}")]),a._v("bin/hysteria/config "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${TROJAN_PANEL_CORE_DATA}")]),a._v("bin/naiveproxy/config:"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${TROJAN_PANEL_CORE_DATA}")]),a._v("bin/naiveproxy/config "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${TROJAN_PANEL_CORE_LOGS}")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${TROJAN_PANEL_CORE_LOGS}")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${TROJAN_PANEL_CORE_SQLITE}")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${TROJAN_PANEL_CORE_SQLITE}")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CERT_PATH}")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CERT_PATH}")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${WEB_PATH}")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${WEB_PATH}")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /etc/localtime:/etc/localtime "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("GIN_MODE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("release "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"mariadb_ip='),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${mariadb_ip}")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"mariadb_port='),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${mariadb_port}")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"mariadb_user='),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${mariadb_user}")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"mariadb_pas='),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${mariadb_pas}")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"database='),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${database}")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"account-table='),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${account_table}")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"redis_host='),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${redis_host}")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"redis_port='),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${redis_port}")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"redis_pass='),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${redis_pass}")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"crt_path='),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CERT_PATH}")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${domain}")]),a._v('.crt"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"key_path='),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CERT_PATH}")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${domain}")]),a._v('.key"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"grpc_port='),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${grpc_port}")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\njonssonyan/trojan-panel-core\n")])])])])]),a._v(" "),t("p",[a._v("参数解释：")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("--name trojan-panel-core")]),a._v("：定义容器名称")]),a._v(" "),t("li",[t("code",[a._v("--restart always")]),a._v("：容器随着Docker启动而启动")]),a._v(" "),t("li",[t("code",[a._v("--network=host")]),a._v("：使用Host网络模式")]),a._v(" "),t("li",[t("code",[a._v("-v ${TROJAN_PANEL_CORE_DATA}bin/xray/config:${TROJAN_PANEL_CORE_DATA}bin/xray/config")]),a._v("：映射Xray配置文件夹")]),a._v(" "),t("li",[t("code",[a._v("-v ${TROJAN_PANEL_CORE_DATA}bin/trojango/config:${TROJAN_PANEL_CORE_DATA}bin/trojango/config")]),a._v("：映射TrojanGo配置文件夹")]),a._v(" "),t("li",[t("code",[a._v("-v ${TROJAN_PANEL_CORE_DATA}bin/hysteria/config:${TROJAN_PANEL_CORE_DATA}bin/hysteria/config")]),a._v("：映射Hysteria配置文件夹")]),a._v(" "),t("li",[t("code",[a._v("-v ${TROJAN_PANEL_CORE_DATA}bin/naiveproxy/config:${TROJAN_PANEL_CORE_DATA}bin/naiveproxy/config")]),a._v("：映射NaiveProxy配置文件夹")]),a._v(" "),t("li",[t("code",[a._v("-v ${TROJAN_PANEL_CORE_LOGS}:${TROJAN_PANEL_CORE_LOGS}")]),a._v("：映射日志文件夹")]),a._v(" "),t("li",[t("code",[a._v("-v ${TROJAN_PANEL_CORE_SQLITE}:${TROJAN_PANEL_CORE_SQLITE}")]),a._v("：映射SQLite文件夹")]),a._v(" "),t("li",[t("code",[a._v("-v ${CERT_PATH}:${CERT_PATH}")]),a._v("：映射证书文件夹")]),a._v(" "),t("li",[t("code",[a._v("-v ${WEB_PATH}:${WEB_PATH}")]),a._v("：映射回落资源文件夹")]),a._v(" "),t("li",[t("code",[a._v("-v /etc/localtime:/etc/localtime")]),a._v("：同步宿主机和容器的时区")]),a._v(" "),t("li",[t("code",[a._v("-e GIN_MODE=release")]),a._v("：release模式启动")]),a._v(" "),t("li",[t("code",[a._v('-e "mariadb_ip=${mariadb_ip}"')]),a._v("："),t("code",[a._v("${mariadb_ip}")]),a._v("为 MariaDB 数据库的 IP 地址(默认:本机数据库)")]),a._v(" "),t("li",[t("code",[a._v('-e "mariadb_port=${mariadb_port}"')]),a._v("："),t("code",[a._v("${mariadb_port}")]),a._v("为 MariaDB 数据库的端口(默认:本机数据库端口)")]),a._v(" "),t("li",[t("code",[a._v('-e "mariadb_user=${mariadb_user}"')]),a._v("："),t("code",[a._v("${mariadb_user}")]),a._v("为 MariaDB 数据库的用户名(默认:root)")]),a._v(" "),t("li",[t("code",[a._v('-e "mariadb_pas=${mariadb_pas}"')]),a._v("："),t("code",[a._v("${mariadb_pas}")]),a._v("为 MariaDB 数据库密码(默认:123456)")]),a._v(" "),t("li",[t("code",[a._v('-e "database=${database}"')]),a._v("："),t("code",[a._v("${database}")]),a._v("为数据库名称")]),a._v(" "),t("li",[t("code",[a._v('-e "account-table=${account_table}"')]),a._v("："),t("code",[a._v("${account_table}")]),a._v("为用户表名称")]),a._v(" "),t("li",[t("code",[a._v('-e "redis_host=${redis_host}"')]),a._v("："),t("code",[a._v("${redis_host}")]),a._v("为 Redis 的 IP 地址(默认:本机 Redis)")]),a._v(" "),t("li",[t("code",[a._v('-e "redis_port=${redis_port}"')]),a._v("："),t("code",[a._v("${redis_port}")]),a._v("为 Redis 的端口(默认:本机 Redis 端口)")]),a._v(" "),t("li",[t("code",[a._v('-e "redis_pass=${redis_pass}"')]),a._v("："),t("code",[a._v("${redis_pass}")]),a._v("为 Redis 的密码(默认:123456)")]),a._v(" "),t("li",[t("code",[a._v('-e "crt_path=${CERT_PATH}${domain}.crt"')]),a._v("：自定义证书.crt文件路径")]),a._v(" "),t("li",[t("code",[a._v('-e "key_path=${CERT_PATH}${domain}.key"')]),a._v("：自定义证书.key文件路径")]),a._v(" "),t("li",[t("code",[a._v('-e "grpc_port=${grpc_port}"')]),a._v("：自定义服务器之间的通讯端口")])])])}),[],!1,null,null,null);t.default=r.exports}}]);